---
title: "ons_energy_report"
format:
  html:
    code-fold: true
    code-summary: ""
editor: visual
---

## Quarto

-   Interactive map
-   Distribution of fuel poverty (e.g. no one below 5%)
-   Try and calculate fuel_poverty based only on neighbours fuel poverty

```{r}
# loading packages
if (!require("pacman")) install.packages("pacman")

pacman::p_load(readxl, janitor, dplyr, stringr, sf, tmap, leaflet)


# reading fuel poverty data
fuel_poverty <- read_xlsx("./data/sub-regional-fuel-poverty-tables-2023-2021-data.xlsx",
                          sheet = "Table 2",
                          skip = 2)


# cleaning data
fuel_poverty <- fuel_poverty |>
  clean_names()

fuel_poverty <- fuel_poverty |>
  rename(area_codes = area_codes_note_4,
         region = area_names,
         subregion = x3,
         area_name = x4,
         households_total = number_of_households,
         households_fp = number_of_households_in_fuel_poverty,
         households_fp_pct = proportion_of_households_fuel_poor_percent)

fuel_poverty <- fuel_poverty |>
  filter(!(is.na(households_fp)))

# removing areas that are a collection of smaller areas
# only want the smallest level available in the data
fuel_poverty <- fuel_poverty |>
  filter(!(str_detect(area_codes, "^E1") | str_detect(area_codes, "^E9")))

# tidying up area name column
fuel_poverty <- fuel_poverty |>
  mutate(area_name = if_else(is.na(area_name), subregion, area_name)) |>
  select(-c(region, subregion))


# reading in geospatial data
lad_shp <- sf::st_read("./data/LAD_MAY_2023_UK_BUC_V2.shp", quiet = TRUE)

fuel_poverty <- left_join(fuel_poverty,
                          lad_shp,
                          join_by(area_codes == LAD23CD))

```

```{r}

fuel_poverty_sf <- sf::st_as_sf(fuel_poverty)

tmap::tmap_mode("plot")

tm_shape(fuel_poverty_sf) +
  tm_polygons(col = "households_fp_pct",
              title = "Proportion of households\nin fuel poverty") +
  tm_layout(title = "Fuel poverty is widespread throughout England and Wales",
            frame = FALSE,
            inner.margins = c(0.1, 0.1, 0.1, 0.1))

fuel_poverty_sf2 <- fuel_poverty_sf |>
  select(-c(BNG_E, BNG_N, LAT, LONG))

fuel_poverty_sf2 <- st_transform(fuel_poverty_sf2, 4326)

bins <- c(0, 5, 10, 15, 20, 25)
pal <- colorBin("YlOrRd", domain = fuel_poverty_sf2$households_fp_pct, bins = bins)

labels <- sprintf(
  "<strong>%s</strong><br/>
  %.1f%% (%d people)",
  fuel_poverty_sf2$area_name, fuel_poverty_sf2$households_fp_pct, fuel_poverty_sf2$households_fp
) %>% lapply(htmltools::HTML)

leaflet(st_transform(fuel_poverty_sf2, 4326)) |>
  addTiles() |>
  addPolygons(label = labels,
              weight = 1,
              color = "white",
              fillOpacity = 0.6,
              fillColor = ~pal(fuel_poverty_sf2$households_fp_pct)) |>
  addLegend(pal = pal, values = ~households_fp_pct)



```
